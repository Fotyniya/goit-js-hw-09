{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAe,kBACrCC,EAAYF,SAASC,cAAe,iBACpCE,EAAiBH,SAASC,cAAe,mBAiB/C,SAASG,EAAcC,EAAUC,GAY/B,OAXgB,IAAIC,SAAS,CAACC,EAAKC,KACjC,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAI,C,SAACH,E,MAAUC,IAEfG,EAAI,C,SAACJ,E,MAAUC,GAAO,GAEvBA,EAAM,G,CA1BYN,SAASC,cAAc,UAE/Ba,iBAAiB,SAAUC,IAC1CA,EAAMC,iBACJ,IAAK,IAAIC,EAAI,EAAGA,EAAId,EAAee,MAAOD,GAAK,EAAE,CAE/Cb,EAAca,EAAI,EADNE,OAAOpB,EAAWmB,OAASD,EAAIE,OAAOjB,EAAUgB,QAE3DE,MAAK,EAACf,SAAEA,EAAQC,MAAEA,MACjBT,EAAAwB,OAAOC,QAAQ,uBAAqBjB,QAAiBC,MAAU,IAEhEiB,OAAM,EAAClB,SAAEA,EAAQC,MAAEA,MAClBT,EAAAwB,OAAOG,QAAQ,sBAAoBnB,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst firstDelay = document.querySelector ('[name = delay]');\nconst stepDelay = document.querySelector ('[name = step]');\nconst amountPromises = document.querySelector ('[name = amount]');\nconst btnCreatPromises = document.querySelector('button');\n\nbtnCreatPromises.addEventListener('click', (event => {\n  event.preventDefault();\n    for (let i = 0; i < amountPromises.value; i += 1){\n      let delay = Number(firstDelay.value) + i * Number(stepDelay.value)\n      createPromise(i + 1, delay)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n    }}\n));\n\nfunction createPromise(position, delay) {\n  const promise = new Promise ((res, rej) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n    setTimeout(() => {\n      if (shouldResolve) {\n        res({position, delay})\n      } else {\n        rej({position, delay})\n      } \n    }, delay)\n  })\n  return promise\n}\n"],"names":["$iQIUW","parcelRequire","$47d4ff9957288465$var$firstDelay","document","querySelector","$47d4ff9957288465$var$stepDelay","$47d4ff9957288465$var$amountPromises","$47d4ff9957288465$var$createPromise","position","delay","Promise","res","rej","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","i","value","Number","then","Notify","success","catch","failure"],"version":3,"file":"03-promises.5fbf455f.js.map"}